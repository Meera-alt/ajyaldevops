Create a Node.js Express web app
==================================


In this exercise you will use Express to build a web app. If you don't already have the Express generator installed, you can install it from your command-line interface (CLI) with the following command.
Shell

npm install express-generator -g

Open your CLI, navigate to a directory where you have rights to create files, and run the following command to create a new Express app that uses Handlebars as the rendering engine.
Shell

express --hbs graph-tutorial

The Express generator creates a new directory called graph-tutorial and scaffolds an Express app. Navigate to this new directory and enter the following command to install dependencies.
Shell

npm install

Once that command completes, use the following command to start a local web server.
Shell

npm start

Open your browser and navigate to http://localhost:3000. If everything is working, you will see a "Welcome to Express" message. If you don't see that message, check the Express getting started guide.

Before moving on, install some additional gems that you will use later:

    dotenv for loading values from a .env file.
    moment for formatting date/time values.
    connect-flash to flash error messages in the app.
    express-session to store values in an in-memory server-side session.
    passport-azure-ad for authenticating and getting access tokens.
    simple-oauth2 for token management.
    microsoft-graph-client for making calls to Microsoft Graph.
    isomorphic-fetch to polyfill the fetch for Node. A fetch polyfill is required for the microsoft-graph-client library. See the Microsoft Graph JavaScript client library wiki for more information.

Run the following command in your CLI.
Shell

npm install dotenv@8.2.0 moment@2.24.0 connect-flash@0.1.1 express-session@1.17.0 isomorphic-fetch@2.2.1
npm install passport-azure-ad@4.2.0 simple-oauth2@3.1.0 @microsoft/microsoft-graph-client@2.0.0


================================================================================================================================

Now update the application to use the connect-flash and express-session middleware. Open the ./app.js file and add the following require statement to the top of the file.
JavaScript

var session = require('express-session');
var flash = require('connect-flash');

Add the following code excluding astrik immediately after the var app = express(); line.

********************
// Session middleware
// NOTE: Uses default in-memory session store, which is not
// suitable for production
app.use(session({
  secret: 'your_secret_value_here',
  resave: false,
  saveUninitialized: false,
  unset: 'destroy'
}));

// Flash middleware
app.use(flash());

// Set up local vars for template layout
app.use(function(req, res, next) {
  // Read any flashed errors and save
  // in the response locals
  res.locals.error = req.flash('error_msg');

  // Check for simple error string and
  // convert to layout's expected format
  var errs = req.flash('error');
  for (var i in errs){
    res.locals.error.push({message: 'An error occurred', debug: errs[i]});
  }

  next();
});
********************************************************************************


